[
    {
        "id": "b06ec42cadd2894f",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b78968a619ae12f9",
        "type": "inject",
        "z": "b06ec42cadd2894f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "pH",
        "payload": "4",
        "payloadType": "num",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "dfd4def9d3a5f512"
            ]
        ]
    },
    {
        "id": "dfd4def9d3a5f512",
        "type": "function",
        "z": "b06ec42cadd2894f",
        "name": "function",
        "func": "const setValue = 7;\nconst pH = msg.payload\n// Membership functions for Sangat Asam, Asam, Normal, and Basa pH values\nfunction sangatAsam(pH) {\n    if (pH <= 3) return 1;\n    else if (pH > 3 && pH <= 5) return (5 - pH) / 2;\n    else return 0;\n}\n\nfunction asam(pH) {\n    if (pH <= 3 || pH >= 6.5) return 0;\n    else if (pH > 3 && pH <= 5) return (pH - 3) / 2;\n    else if (pH > 5 && pH <= 6.5) return (6.5 - pH) / 1.5;\n    else return 0;\n}\n\nfunction normal(pH) {\n    if (pH <= 6 || pH >= 8) return 0;\n    else if (pH > 6 && pH <= 7) return (pH - 6) / 1;\n    else if (pH > 7 && pH < 8) return (8 - pH) / 1;\n    else return 0;\n}\n\nfunction basa(pH) {\n    if (pH <= 7.5 || pH >= 11) return 0;\n    else if (pH > 7.5 && pH <= 9) return (pH - 7.5) / 1.5;\n    else if (pH > 9 && pH < 11) return (11 - pH) / 2;\n    else return 0;\n}\n\nfunction sangatBasa(pH) {\n    if (pH <= 10.5) return 0;\n    else if (pH > 10.5 && pH <= 12.5) return (pH - 10.5) / 2;\n    else return 1;\n}\n// Sugeno fuzzy inference \nfunction classifyAcidity(pH) {\n    let w1 = sangatAsam(pH);\n    let y1 = 1;\n\n    let w2 = asam(pH);\n    let y2 = 2;\n\n    let w3 = normal(pH);\n    let y3 = 3;\n\n    let w4 = basa(pH);\n    let y4 = 4;\n\n    let w5 = sangatBasa(pH);\n    let y5 = 5;\n\n    let weightedSum = w1 * y1 + w2 * y2 + w3 * y3 + w4 * y4 + w5 * y5;\n    let totalWeight = w1 + w2 + w3 + w4 + w5;\n\n    if (totalWeight === 0) return 'Unknown';\n    let result = weightedSum / totalWeight;\n\n    if (result < 1.5) return 'Sangat Asam';\n    else if (result < 2.5) return 'Asam';\n    else if (result < 3.5) return 'Normal';\n    else if (result < 4.5) return 'Basa';\n    else return 'Sangat Basa';\n}\nlet phUp, phDown;\nconst index = {\n    \"Sangat Banyak\": 100,\n    \"Banyak\": 75,\n    \"Normal\": 50,\n    \"Sedikit\": 25,\n    \"Kosong\": 0\n}\nlet presentValue = classifyAcidity(pH);\nswitch (classifyAcidity(setValue)) {\n    case \"Normal\":\n        switch (presentValue) {\n            case \"Sangat Asam\":\n                phUp = \"Banyak\"\n                phDown = \"Kosong\"\n                break;\n            case \"Asam\":\n                phUp = \"Sedikit\"\n                phDown = \"Kosong\"\n                break;\n            case \"Normal\":\n                phUp = \"Kosong\"\n                phDown = \"Kosong\"\n                break;\n            case \"Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Sedikit\"\n                break;\n            case \"Sangat Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Banyak\"\n                break;\n            default:\n                break;\n        }\n        break;\n    case \"Sangat Asam\":\n        switch (presentValue) {\n            case \"Sangat Asam\":\n                phUp = \"Kosong\"\n                phDown = \"Kosong\"\n                break;\n            case \"Asam\":\n                phUp = \"Kosong\"\n                phDown = \"Sedikit\"\n                break;\n            case \"Normal\":\n                phUp = \"Kosong\"\n                phDown = \"Normal\"\n                break;\n            case \"Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Banyak\"\n                break;\n            case \"Sangat Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Sangat Banyak\"\n                break;\n            default:\n                break;\n        }\n        break;\n    case \"Asam\":\n        switch (presentValue) {\n            case \"Sangat Asam\":\n                phUp = \"Sedikit\"\n                phDown = \"Kosong\"\n                break;\n            case \"Asam\":\n                phUp = \"Kosong\"\n                phDown = \"Kosong\"\n                break;\n            case \"Normal\":\n                phUp = \"Kosong\"\n                phDown = \"Sedikit\"\n                break;\n            case \"Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Normal\"\n                break;\n            case \"Sangat Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Banyak\"\n                break;\n            default:\n                break;\n        }\n        break;\n    case \"Basa\":\n        switch (presentValue) {\n            case \"Sangat Asam\":\n                phUp = \"Sangat Banyak\"\n                phDown = \"Kosong\"\n                break;\n            case \"Asam\":\n                phUp = \"Banyak\"\n                phDown = \"Kosong\"\n                break;\n            case \"Normal\":\n                phUp = \"Sedikit\"\n                phDown = \"Kosong\"\n                break;\n            case \"Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Kosong\"\n                break;\n            case \"Sangat Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Sedikit\"\n                break;\n            default:\n                break;\n        }\n        break;\n    case \"Sangat Basa\":\n        switch (presentValue) {\n            case \"Sangat Asam\":\n                phUp = \"Sangat Banyak\"\n                phDown = \"Kosong\"\n                break;\n            case \"Asam\":\n                phUp = \"Banyak\"\n                phDown = \"Kosong\"\n                break;\n            case \"Normal\":\n                phUp = \"Sedikit\"\n                phDown = \"Kosong\"\n                break;\n            case \"Basa\":\n                phUp = \"Sedikit\"\n                phDown = \"Kosong\"\n                break;\n            case \"Sangat Basa\":\n                phUp = \"Kosong\"\n                phDown = \"Kosong\"\n                break;\n            default:\n                break;\n        }\n        break;\n}\nconst result = {\n    phUp: {\n        value: phUp,\n        index: index[phUp]\n    },\n    phDown: {\n        value: phDown,\n        index: index[phDown]\n    }\n}\n\nreturn {\n    topic: \"result\",\n    payload: result\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "1b174c22ab6d2a61"
            ]
        ]
    },
    {
        "id": "1b174c22ab6d2a61",
        "type": "debug",
        "z": "b06ec42cadd2894f",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 260,
        "wires": []
    },
    {
        "id": "358f651148bf6923",
        "type": "inject",
        "z": "b06ec42cadd2894f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "pH",
        "payload": "7",
        "payloadType": "num",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "dfd4def9d3a5f512"
            ]
        ]
    },
    {
        "id": "7bdba67f8486b25f",
        "type": "inject",
        "z": "b06ec42cadd2894f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "pH",
        "payload": "12",
        "payloadType": "num",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "dfd4def9d3a5f512"
            ]
        ]
    }
]